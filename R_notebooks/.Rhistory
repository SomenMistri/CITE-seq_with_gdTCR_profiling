library(Seurat)
library(tidyverse)
library(Matrix)
library(RCurl)
library(scales)
library(sctransform)
library(ggpubr)
library(RColorBrewer)
library(openxlsx)
library(scCustomize)
data_clust <- readRDS("data_clust_cc_stress_regressed.rds")
# Set identity classes to seurat_clusters and set levels
Idents(object = data_clust) <- "seurat_clusters"
data_clust$hash.type <- factor(data_clust$hash.type, levels =c("B6","SAP"))
# Explore the significance of batch effect on clustering
DimPlot(data_clust, split.by = "hash.type", label = TRUE, ncol = 2) + NoLegend()
# Save the plot
ggsave(path = "Figs", filename = "clusters_B6vsSAP.png", height = 4, width = 8, units = 'in', dpi = 300, bg = "transparent", device = 'png')
ggsave(path = "Figs", filename = "clusters_B6vsSAP.svg", height = 4, width = 8, units = 'in', dpi = 300, bg = "transparent", device = 'svg')
# For B6 (wild type) only
Idents(data_clust) <- "hash.type"
data.subset.B6 <- subset(data_clust, idents = "B6")
DefaultAssay(data.subset.B6)  <- "SCT"
f1 <- FeaturePlot(data.subset.B6, features = c("Il17a", "Il17f", "Ifng", "Il4", "Slamf1"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f2 <- FeaturePlot(data.subset.B6, features = c("Slamf6", "Slamf7", "Rorc", "Blk", "Maf"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f3 <- FeaturePlot(data.subset.B6, features = c("Tbx21", "Etv5", "S1pr1","Klf2", "Zbtb16"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f4 <- FeaturePlot(data.subset.B6, features = c("Cd5", "Icos","Nr4a1", "Gzma","Cd4"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f5 <- FeaturePlot(data.subset.B6, features = c("Cd8b1", "Rag1","Ptcra", "Dgkeos", "Sox13"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f6 <- FeaturePlot(data.subset.B6, features = c("Sh2d1a", "Hivep3","Klrb1c", "Il2rb", "Cd244a"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f7 <- FeaturePlot(data.subset.B6, features = c("Cd200", "Izumo1r","Il2ra", "Cd44", "Cd28"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
figure.B6 <- ggarrange(f1, f2, f3, f4, f5, f6, f7,
ncol = 7)
figure.B6
ggsave(figure.B6, path = "Figs", filename = "Featureplot_B6.png",  height=15, width=30, units='in', dpi = 300, bg = "transparent", device='png')
#ggsave(figure.B6, path = "Figs", filename = "Featureplot_B6.svg",  height=15, width=30, units='in', dpi = 300, bg = "transparent", device='svg')
# For SAP KO only
Idents(data_clust) <- "hash.type"
data.subset.SAP <- subset(data_clust, idents = "SAP")
DefaultAssay(data.subset.SAP)  <- "SCT"
f1 <- FeaturePlot(data.subset.SAP, features = c("Il17a", "Il17f", "Ifng", "Il4", "Slamf1"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f2 <- FeaturePlot(data.subset.SAP, features = c("Slamf6", "Slamf7", "Rorc", "Blk", "Maf"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f3 <- FeaturePlot(data.subset.SAP, features = c("Tbx21", "Etv5", "S1pr1","Klf2", "Zbtb16"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f4 <- FeaturePlot(data.subset.SAP, features = c("Cd5", "Icos","Nr4a1", "Gzma","Cd4"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f5 <- FeaturePlot(data.subset.SAP, features = c("Cd8b1", "Rag1","Ptcra", "Dgkeos", "Sox13"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f6 <- FeaturePlot(data.subset.SAP, features = c("Sh2d1a", "Hivep3","Klrb1c", "Il2rb", "Cd244a"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
f7 <- FeaturePlot(data.subset.SAP, features = c("Cd200", "Izumo1r","Il2ra", "Cd44", "Cd28"), pt.size = 1.0, min.cutoff = "q1", max.cutoff = "q99", ncol=1, order = TRUE)
figure.SAP <- ggarrange(f1, f2, f3, f4, f5, f6, f7,
ncol = 7)
figure.SAP
ggsave(figure.SAP, path = "Figs", filename = "Featureplot_SAP.png",  height=15, width=30, units='in', dpi = 300, bg = "transparent", device='png')
#ggsave(figure.SAP, path = "Figs", filename = "Featureplot_SAP.svg",  height=15, width=30, units='in', dpi = 300, bg = "transparent", device='svg')
data_clust <- RunUMAP(data_PCA, reduction = "pca", dims = 1:30)
# Visualize clustered cells
DimPlot(data_clust, reduction = "umap", label = TRUE) + NoLegend()
# Save the clustered plot
ggsave(path = "Figs", filename = "Clusters.png", height = 4, width = 5, units = 'in', dpi = 300, bg = "transparent", device = 'png')
# Visualize clustered cells
Idents(object = data_clust) <- "seurat_clusters"
DimPlot(data_clust, reduction = "umap", label = TRUE) + NoLegend()
# Save the clustered plot
ggsave(path = "Figs", filename = "Clusters.png", height = 4, width = 5, units = 'in', dpi = 300, bg = "transparent", device = 'png')
data_clust <- readRDS("data_clust_cc_stress_regressed.rds")
# For B6
Idents(data_clust) <- "hash.type"
data.subset.B6 <- subset(data_clust, idents = "B6")
DefaultAssay(data.subset.B6)  <- "RNA"
f1 <- FeaturePlot_scCustom(data.subset.B6, colors_use = viridis_plasma_dark_high, features = "Il17f", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f2 <- FeaturePlot_scCustom(data.subset.B6, colors_use = viridis_plasma_dark_high, features = "Ifng", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f3 <- FeaturePlot_scCustom(data.subset.B6, colors_use = viridis_plasma_dark_high, features = "Il4", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f4 <- FeaturePlot_scCustom(data.subset.B6, colors_use = viridis_plasma_dark_high, features = "Slamf7", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f5 <- FeaturePlot_scCustom(data.subset.B6, colors_use = viridis_plasma_dark_high, features = "Tbx21", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f6 <- FeaturePlot_scCustom(data.subset.B6, colors_use = viridis_plasma_dark_high, features = "Zbtb16", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
figure.B6 <- ggarrange(f1, f2, f3, f4, f5, f6,
ncol = 3, nrow = 2)
figure.B6
ggsave(figure.B6, path = "Figs", filename = "Featureplot_B6_scCustomize.png",  height=8, width=14, units='in', dpi = 300, bg = "transparent", device='png')
#ggsave(figure.B6, path = "Figs", filename = "Featureplot_B6_scCustomize.svg",  height=8, width=14, units='in', dpi = 300, bg = "transparent", device='svg')
# For B6
Idents(data_clust) <- "hash.type"
data.subset.B6 <- subset(data_clust, idents = c("B6"))
data.subset.B6$seurat_clusters <- factor(x = data.subset.B6$seurat_clusters, levels = c("8","10","1","2","7","5","6","4","3","9","0"))
DefaultAssay(data.subset.B6)  <- "RNA"
Idents(data.subset.B6) <- "seurat_clusters"
f4 <- VlnPlot(data.subset.B6, features = "Blk", sort = FALSE, log = FALSE)+ NoLegend()
f5 <- VlnPlot(data.subset.B6, features = "Maf", sort = FALSE, log = FALSE)+ NoLegend()
f6 <- VlnPlot(data.subset.B6, features = "Rorc", sort = FALSE, log = FALSE)+ NoLegend()
f11 <- VlnPlot(data.subset.B6, features = "Rag1", sort = FALSE, log = FALSE)+ NoLegend()
f13 <- VlnPlot(data.subset.B6, features = "Ptcra", sort = FALSE, log = FALSE)+ NoLegend()
f14 <- VlnPlot(data.subset.B6, features = "Cd8b1", sort = FALSE, log = FALSE)+ NoLegend()
figure.B6 <- ggarrange(f4, f11, f5, f13, f6, f14,
ncol = 2, nrow = 3)
figure.B6
ggsave(figure.B6, path = "Figs", filename = "vlnplot_B6.png",  height=7, width=8, units='in', dpi = 300, bg = "transparent", device='png')
# ggsave(figure.B6, path = "Figs", filename = "vlnplot_B6.svg",  height=7, width=8, units='in', dpi = 300, bg = "transparent", device='svg')
# For B6 vs SAP
Idents(data_clust) <- "hash.type"
data_clust$hash.type <- factor(x = data_clust$hash.type, levels = c("B6","SAP"))
data_clust$seurat_clusters <- factor(x = data_clust$seurat_clusters, levels = c("8","10","1","2","7","5","6","4","3","9","0"))
DefaultAssay(data_clust)  <- "RNA"
Idents(data_clust) <- "seurat_clusters"
gene_list_plot1 <- c("Blk","Maf","Rorc")
gene_list_plot2 <- c("Etv5","Ccr2","Cpa3")
gene_list_plot3 <- c("Sox13","Tox2","Pdcd1")
colors_list <- c("gray","red")
# Create Plots
f1 <- Stacked_VlnPlot(seurat_object = data_clust, features = gene_list_plot1, split.by = "hash.type",x_lab_rotate = FALSE,
colors_use = colors_list, plot_legend = TRUE, plot_spacing = 0.15, pt.size = 0.1)
f2 <- Stacked_VlnPlot(seurat_object = data_clust, features = gene_list_plot2, split.by = "hash.type",x_lab_rotate = FALSE,
colors_use = colors_list,  plot_legend = TRUE, plot_spacing = 0.15, pt.size = 0.1)
f3 <- Stacked_VlnPlot(seurat_object = data_clust, features = gene_list_plot3, split.by = "hash.type",x_lab_rotate = FALSE,
colors_use = colors_list,  plot_legend = TRUE, plot_spacing = 0.15, pt.size = 0.1)
figure <- ggarrange(f1, f2, f3,
ncol = 3, nrow = 1)
figure
ggsave(figure, path = "Figs", filename = "vlnplot_B6vsSAP.png",  height=6, width=18, units='in', dpi = 300, bg = "transparent", device='png')
#ggsave(figure, path = "Figs", filename = "vlnplot_B6vsSAP.svg",  height=6, width=18, units='in', dpi = 300, bg = "transparent", device='svg')
# For B6
Idents(data_clust) <- "hash.type"
data.subset.B6 <- subset(data_clust, idents = c("B6"))
data.subset.B6$seurat_clusters <- factor(x = data.subset.B6$seurat_clusters, levels = c("8","10","1","2","7","5","6","4","3","9","0"))
DefaultAssay(data.subset.B6)  <- "RNA"
Idents(data.subset.B6) <- "seurat_clusters"
f4 <- VlnPlot(data.subset.B6, features = "Blk", sort = FALSE, log = FALSE)+ NoLegend()
f5 <- VlnPlot(data.subset.B6, features = "Maf", sort = FALSE, log = FALSE)+ NoLegend()
f6 <- VlnPlot(data.subset.B6, features = "Rorc", sort = FALSE, log = FALSE)+ NoLegend()
figure.B6 <- ggarrange(f4, f11, f5,
ncol = 1, nrow = 3)
figure.B6
ggsave(figure.B6, path = "Figs", filename = "vlnplot_B6.png",  height=7, width=3, units='in', dpi = 300, bg = "transparent", device='png')
# ggsave(figure.B6, path = "Figs", filename = "vlnplot_B6.svg",  height=7, width=8, units='in', dpi = 300, bg = "transparent", device='svg')
# For B6 vs SAP
Idents(data_clust) <- "hash.type"
data_clust$hash.type <- factor(x = data_clust$hash.type, levels = c("B6","SAP"))
data_clust$seurat_clusters <- factor(x = data_clust$seurat_clusters, levels = c("8","10","1","2","7","5","6","4","3","9","0"))
DefaultAssay(data_clust)  <- "RNA"
Idents(data_clust) <- "seurat_clusters"
gene_list_plot1 <- c("Blk","Maf","Rorc")
colors_list <- c("gray","red")
# Create Plots
f1 <- Stacked_VlnPlot(seurat_object = data_clust, features = gene_list_plot1, split.by = "hash.type",x_lab_rotate = FALSE,
colors_use = colors_list, plot_legend = TRUE, plot_spacing = 0.15, pt.size = 0.1)
f1
ggsave(f1, path = "Figs", filename = "vlnplot_B6vsSAP.png",  height=7, width=6, units='in', dpi = 300, bg = "transparent", device='png')
#ggsave(figure, path = "Figs", filename = "vlnplot_B6vsSAP.svg",  height=7, width=5, units='in', dpi = 300, bg = "transparent", device='svg')
# Define gene lists per cluster
IL17 <- c("Il17a","Il17f","Rorc","Blk","Maf")
IFNg <- c("Ifng","Tbx21","Klrb1c", "Il2rb")
IL4 <- c("Il4","Zbtb16","Icos")
data_clust <- AddModuleScore(data_clust,
features = list(IL17),
name="features1_")
data_clust <- AddModuleScore(data_clust,
features = list(IFNg),
name="features2_")
data_clust3 <- AddModuleScore(data_clust,
features = list(IL4),
name="features3_")
# Plot scores
p <- DimPlot(data_clust, reduction = "umap", label = TRUE) + NoLegend()
p1 <-FeaturePlot(data_clust,
features = "IL17_1", label = FALSE, order = TRUE, min.cutoff = "q1", max.cutoff = "q99") +
scale_colour_gradientn(colours = rev(brewer.pal(n = 11, name = "RdBu")))
# Define gene lists per cluster
IL17 <- c("Il17a","Il17f","Rorc","Blk","Maf")
IFNg <- c("Ifng","Tbx21","Klrb1c", "Il2rb")
IL4 <- c("Il4","Zbtb16","Icos")
data_clust <- AddModuleScore(data_clust,
features = list(IL17),
name="IL17_")
data_clust <- AddModuleScore(data_clust,
features = list(IFNg),
name="IFNg_")
data_clust3 <- AddModuleScore(data_clust,
features = list(IL4),
name="IL4_")
# Plot scores
p <- DimPlot(data_clust, reduction = "umap", label = TRUE) + NoLegend()
p1 <-FeaturePlot(data_clust,
features = "IL17_1", label = FALSE, order = TRUE, min.cutoff = "q1", max.cutoff = "q99") +
scale_colour_gradientn(colours = rev(brewer.pal(n = 11, name = "RdBu")))
p2 <-FeaturePlot(data_clust,
features = "IFNg_1", label = FALSE, order = TRUE, min.cutoff = "q1", max.cutoff = "q99") +
scale_colour_gradientn(colours = rev(brewer.pal(n = 11, name = "RdBu")))
p3 <-FeaturePlot(data_clust3,
features = "IL4_1", label = FALSE, order = TRUE, min.cutoff = "q1", max.cutoff = "q99") +
scale_colour_gradientn(colours = rev(brewer.pal(n = 11, name = "RdBu")))
figure <- ggarrange(p, p1, p2, p3,
ncol = 2, nrow = 2)
ggsave(figure, path = "Figs", filename = "Module_scoring.png",  height=8, width=12, units='in', dpi = 300, bg = "transparent", device='png')
#ggsave(figure, filename = "Module_scoring.pdf",  height=8, width=12, units='in', dpi = 300, bg = "transparent", device='pdf')
# Define gene lists per cluster
IL17 <- c("Il17a","Il17f","Rorc","Blk","Maf")
IFNg <- c("Ifng","Tbx21","Klrb1c", "Il2rb")
IL4 <- c("Il4","Zbtb16","Icos")
data_clust <- AddModuleScore(data_clust,
features = list(IL17),
name="IL17_")
data_clust <- AddModuleScore(data_clust,
features = list(IFNg),
name="IFNg_")
data_clust3 <- AddModuleScore(data_clust,
features = list(IL4),
name="IL4_")
# Plot scores
p <- DimPlot(data_clust, reduction = "umap", label = TRUE) + NoLegend()
f1 <- FeaturePlot_scCustom(data.subset.B6, colors_use = viridis_plasma_dark_high, features = "IL17_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
# Define gene lists per cluster
IL17 <- c("Il17a","Il17f","Rorc","Blk","Maf")
IFNg <- c("Ifng","Tbx21","Klrb1c", "Il2rb")
IL4 <- c("Il4","Zbtb16","Icos")
data_clust <- AddModuleScore(data_clust,
features = list(IL17),
name="IL17_")
data_clust <- AddModuleScore(data_clust,
features = list(IFNg),
name="IFNg_")
data_clust3 <- AddModuleScore(data_clust,
features = list(IL4),
name="IL4_")
# Plot scores
p <- DimPlot(data_clust, reduction = "umap", label = TRUE) + NoLegend()
f1 <- FeaturePlot_scCustom(data.subset.B6, colors_use = viridis_plasma_dark_high, features = "IL17_", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
# Define gene lists per cluster
IL17 <- c("Il17a","Il17f","Rorc","Blk","Maf")
IFNg <- c("Ifng","Tbx21","Klrb1c", "Il2rb")
IL4 <- c("Il4","Zbtb16","Icos")
data_clust <- AddModuleScore(data_clust,
features = list(IL17),
name="IL17_")
data_clust <- AddModuleScore(data_clust,
features = list(IFNg),
name="IFNg_")
data_clust3 <- AddModuleScore(data_clust,
features = list(IL4),
name="IL4_")
# Plot scores
p <- DimPlot(data_clust, reduction = "umap", label = TRUE) + NoLegend()
f1 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IL17_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f2 <-FeaturePlot(data_clust,
features = "IFNg_1", label = FALSE, order = TRUE, min.cutoff = "q1", max.cutoff = "q99") +
scale_colour_gradientn(colours = rev(brewer.pal(n = 11, name = "RdBu")))
f3 <-FeaturePlot(data_clust3,
features = "IL4_1", label = FALSE, order = TRUE, min.cutoff = "q1", max.cutoff = "q99") +
scale_colour_gradientn(colours = rev(brewer.pal(n = 11, name = "RdBu")))
figure <- ggarrange(p, f1, f2, f3,
ncol = 2, nrow = 2)
ggsave(figure, path = "Figs", filename = "Module_scoring.png",  height=8, width=12, units='in', dpi = 300, bg = "transparent", device='png')
#ggsave(figure, filename = "Module_scoring.pdf",  height=8, width=12, units='in', dpi = 300, bg = "transparent", device='pdf')
# Define gene lists per cluster
IL17 <- c("Il17a","Il17f","Rorc","Blk","Maf")
IFNg <- c("Ifng","Tbx21","Klrb1c", "Il2rb")
IL4 <- c("Il4","Zbtb16","Icos")
data_clust <- AddModuleScore(data_clust,
features = list(IL17),
name="IL17_")
data_clust <- AddModuleScore(data_clust,
features = list(IFNg),
name="IFNg_")
data_clust3 <- AddModuleScore(data_clust,
features = list(IL4),
name="IL4_")
# Plot scores
p <- DimPlot(data_clust, reduction = "umap", label = TRUE, pt.size = 2) + NoLegend()
f1 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IL17_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f2 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IFNg_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f3 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IL4_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
# Define gene lists per cluster
IL17 <- c("Il17a","Il17f","Rorc","Blk","Maf")
IFNg <- c("Ifng","Tbx21","Klrb1c", "Il2rb")
IL4 <- c("Il4","Zbtb16","Icos")
data_clust <- AddModuleScore(data_clust,
features = list(IL17),
name="IL17_")
data_clust <- AddModuleScore(data_clust,
features = list(IFNg),
name="IFNg_")
data_clust3 <- AddModuleScore(data_clust,
features = list(IL4),
name="IL4_")
# Plot scores
p <- DimPlot(data_clust, reduction = "umap", label = TRUE, pt.size = 2) + NoLegend()
f1 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IL17_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f2 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IFNg_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f3 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IL4_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
# Define gene lists per cluster
IL17 <- c("Il17a","Il17f","Rorc","Blk","Maf")
IFNg <- c("Ifng","Tbx21","Klrb1c", "Il2rb")
IL4 <- c("Il4","Zbtb16","Icos")
data_clust <- AddModuleScore(data_clust,
features = list(IL17),
name="IL17_")
data_clust <- AddModuleScore(data_clust,
features = list(IFNg),
name="IFNg_")
data_clust <- AddModuleScore(data_clust,
features = list(IL4),
name="IL4_")
# Plot scores
p <- DimPlot(data_clust, reduction = "umap", label = TRUE, pt.size = 2) + NoLegend()
f1 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IL17_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f2 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IFNg_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f3 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IL4_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
figure <- ggarrange(p, f1, f2, f3,
ncol = 2, nrow = 2)
ggsave(figure, path = "Figs", filename = "Module_scoring.png",  height=8, width=12, units='in', dpi = 300, bg = "transparent", device='png')
#ggsave(figure, filename = "Module_scoring.pdf",  height=8, width=12, units='in', dpi = 300, bg = "transparent", device='pdf')
# Define gene lists per cluster
IL17 <- c("Il17a","Il17f","Rorc","Blk","Maf")
IFNg <- c("Ifng","Tbx21","Klrb1c", "Il2rb")
IL4 <- c("Il4","Zbtb16","Icos")
data_clust <- AddModuleScore(data_clust,
features = list(IL17),
name="IL17_")
data_clust <- AddModuleScore(data_clust,
features = list(IFNg),
name="IFNg_")
data_clust <- AddModuleScore(data_clust,
features = list(IL4),
name="IL4_")
# Plot scores
p <- DimPlot(data_clust, reduction = "umap", label = TRUE, pt.size = 1.5) + NoLegend()
f1 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IL17_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f2 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IFNg_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
f3 <- FeaturePlot_scCustom(data_clust, colors_use = viridis_plasma_dark_high, features = "IL4_1", alpha_exp = 0.75, pt.size = 1) #alpha_exp = 0.75
figure <- ggarrange(p, f1, f2, f3,
ncol = 2, nrow = 2)
ggsave(figure, path = "Figs", filename = "Module_scoring.png",  height=8, width=12, units='in', dpi = 300, bg = "transparent", device='png')
#ggsave(figure, filename = "Module_scoring.pdf",  height=8, width=12, units='in', dpi = 300, bg = "transparent", device='pdf')
# Now select features
FEATURES <- c("Mki67", "Top2a", "Il2ra",
"Pcna","Rag1", "Rag2", "Ptcra","Cd8b1", "Cd4", "Dgkeos",
"Cd24a","Cd5","Cd28", "Lef1","Hivep3","Sell",
"Sh2d1a","Slamf6","Cd44","Etv5","Tcf7","Igfbp4","Igf1r","Gzma","Ifngr1","Blk","Sox13",
"Sox4","Maf","Rorc","Ccr9","Slamf1",
"Ccr6","Il17a","Il17f","Il23r",
"Ifng","Tbx21","Slamf7","Il2rb","Cd244a","Gzmb","Klrb1c","Ccl5",
"Zbtb16","Icos","Il4",
"Cd200","Tnfrsf9","Nr4a1","Ccr7","Ms4a4b","Ms4a6b",
"Prkch","Dgka","Klf2","S1pr1"
)
# Set assay to "RNA"
DefaultAssay(data_clust)  <- "RNA"
Idents(data_clust) <- "seurat_clusters"
p <- DotPlot_scCustom(
data_clust,
features = FEATURES,
colors_use = viridis_plasma_dark_high,
remove_axis_titles = TRUE,
x_lab_rotate = TRUE,
y_lab_rotate = FALSE,
facet_label_rotate = FALSE,
flip_axes = FALSE
)
ggsave(p, path = "Figs", filename = "bubble_plot_selected_genes.png",  height=4, width=18, units='in', dpi = 300, bg = "white", device='png')
#ggsave(p, path = "Figs", filename = "bubble_plot_selected_genes.svg",  height=4, width=18, units='in', dpi = 300, bg = "white", device='svg')
reqPkg = c("data.table", "Matrix", "hdf5r", "reticulate", "ggplot2",
"gridExtra", "glue", "readr", "RColorBrewer", "R.utils", "Seurat")
newPkg = reqPkg[!(reqPkg %in% installed.packages()[,"Package"])]
if(length(newPkg)){install.packages(newPkg)}
# If you are using h5ad file as input, run the code below as well
# reticulate::py_install("anndata")
reqPkg = c("shiny", "shinyhelper", "data.table", "Matrix", "DT", "hdf5r",
"reticulate", "ggplot2", "gridExtra", "magrittr", "ggdendro")
newPkg = reqPkg[!(reqPkg %in% installed.packages()[,"Package"])]
if(length(newPkg)){install.packages(newPkg)}
devtools::install_github("SGDDNB/ShinyCell")
library(Seurat)
library(ShinyCell)
seu = readRDS("data_clust_cc_stress_regressed.rds")
scConf = createConfig(seu)
makeShinyApp(seu, scConf, gene.mapping = TRUE,
shiny.title = "E17_thymus_B6vsSAP")
shiny::runApp('~/Library/CloudStorage/OneDrive-UVMLarnerCollegeofMedicine/Somen Lab Notebook/NGS Data Analysis/10x_analysis_E17_D9_W6_lung_for_paper2023/10X_E17_thymus_repeat_05_18_23/3_RProjects/12_Rshiny/shinyApp')
